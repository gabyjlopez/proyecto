package com.company;

public class Main {

    public static void main(String[] args) {
        static void bubble (int[]arr){

            for (int i = 0; i < arr.length; i++) {
                for (int j = 0; j < arr.length; j++) {
                    if(arr[i]<arr[j]){
                        int temp=arr[i];
                        arr[i]=arr[j];
                        arr[j]=temp;

                    }

                }
            }

        }

        public static int NumeroAleatorio(int minimo, int maximo){
            int R= maximo-minimo +1;
            int rand=(int)(Math.random()* R)+ minimo;
            return rand;
        }

        public static void main(String[] args) {

            int na=0;

  /*int arr[]={ 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745,
            23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745,
            23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745,
            23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745,
            23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745,
            23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745,
            23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745,
            23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745,
            23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745,
            23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745,
            23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745, 23,500,34,52,87,78,96,102,7458,68,12,54,1,754,154,285,84,1,8,745};*/

            int arr[]={2,56,43,79,0,125,10,22,11,9};
            System.out.println("Array Before Bubble sort");
            for (int i = 0; i < arr.length; i++) {
                System.out.println(arr[i]+"");
            }
            System.out.println();
            bubble(arr);
            System.out.println(" Array befor bubble sort");
            for (int i = 0; i < arr.length; i++) {
                System.out.println(arr[i]+" ");

            }
            long startTime = System.nanoTime();
            long endTime = System.nanoTime() - startTime;
            System.out.println("Arreglo de  tamaÃ±o 1000  Con BubbleSort");
            System.out.println("tiempo en nano segundos:" + endTime);
        }
    }
}
    }
}
